*          JOHN JANCO 03/18/86 CHAGED TO FACILITATE DFSORT
*          DATA SET CBT918     AT LEVEL 002 AS OF 12/07/82
*          DATA SET CBT918     AT LEVEL 002 AS OF 10/01/78              00001
         MACRO                                                          00002
         $REGS                                                          00003
         GBLB  &PRORG                                                   00004
         AIF   (&PRORG).MEX2                                            00005
&PRORG   SETB  1                                                        00006
         SPACE                                                          00007
R0       EQU   0                                                        00008
R1       EQU   1                                                        00009
R2       EQU   2                                                        00010
R3       EQU   3                                                        00011
R4       EQU   4                                                        00012
R5       EQU   5                                                        00013
R6       EQU   6                                                        00014
R7       EQU   7                                                        00015
R8       EQU   8                                                        00016
R9       EQU   9                                                        00017
R10      EQU   10                                                       00018
R11      EQU   11                                                       00019
R12      EQU   12                                                       00020
R13      EQU   13                                                       00021
R14      EQU   14                                                       00022
R15      EQU   15                                                       00023
 SPACE                                                                  00024
REG0     EQU   0                                                        00025
REG1     EQU   1                                                        00026
REG2     EQU   2                                                        00027
REG3     EQU   3                                                        00028
REG4     EQU   4                                                        00029
REG5     EQU   5                                                        00030
REG6     EQU   6                                                        00031
REG7     EQU   7                                                        00032
REG8     EQU   8                                                        00033
REG9     EQU   9                                                        00034
REG10    EQU   10                                                       00035
REG11    EQU   11                                                       00036
REG12    EQU   12                                                       00037
REG13    EQU   13                                                       00038
REG14    EQU   14                                                       00039
REG15    EQU   15                                                       00040
 SPACE                                                                  00041
.MEX2    ANOP                                                           00042
       MEND                                                             00043
         MACRO                                                          00044
&LABEL   $PROLOG &LV=0                                                  00045
.********************************************************************** 00046
.*                                                                      00047
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY           00048
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD          00049
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE               00050
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS            00051
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:                00052
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE        00053
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE        00054
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA   00055
.*                                             REG 10 IS BASE           00056
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES    00057
.*                                                                      00058
.********************************************************************** 00059
         LCLA  &AA,&AB,&AC                                              00060
         GBLB  &PRORG                                                   00061
&AC      SETA  4096                                                     00062
&LABEL   CSECT                                                          00063
         B     32(R15)             BRANCH AROUND                        00064
         DC    AL1(26)                                                  00065
         DC    CL8'&LABEL'         CSECT NAME                           00066
         DC    C'-'                                                     00067
         DC    CL8'&SYSDATE'       COMPILE DATE                         00068
         DC    C'-'                                                     00069
         DC    CL8'&SYSTIME'       COMPILE TIME                         00070
         CNOP  0,4                 ALIGNMENT                            00071
         STM   R14,R12,12(R13)     SAVE REGISTERS                       00072
         LR    R12,R15             LOAD BASE REG                        00073
         USING &LABEL,R12          INFORM ASSEMBLER                     00074
         AIF   (&LV GT 4023).MERR                                       00075
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE      00076
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER       00077
         AIF   (&LV+72 LE 256).XC2                                      00078
         AIF   (&LV+72 LE 512).XC1                                      00079
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE             00080
         LR    R2,R1               SAVE POINTER IN EVEN REG             00081
         LA    R4,1(R1)            SET RECEIVING POINTER                00082
         LR    R5,R0               SET RECEIVING LENGTH                 00083
         BCTR  R5,R0               DECREMENT LENGTH                     00084
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE                00085
         LA    R3,1                SET SENDING LENGTH                   00086
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'          00087
         AGO   .STORE                                                   00088
.XC1     ANOP                                                           00089
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA                 00090
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA                 00091
         AGO   .STORE                                                   00092
.XC2     ANOP                                                           00093
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA                 00094
.STORE   ANOP                                                           00095
         ST    R13,4(R1)           SAVE BACK CHAIN                      00096
         ST    R1,8(R13)           SET FORWARD CHAIN                    00097
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS            00098
         L     R15,16(R13)         RESTORE REG 15                       00099
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH                 00100
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN         00101
         LR    R13,R11             SET SAVEAREA POINTER                 00102
         AIF   (N'&SYSLIST EQ 0).MEND                                   00103
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT                          00104
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT                           00105
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG              00106
         DROP  R12                 DROP ASSUMED BASE REG                00107
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER                     00108
.SKIPIT  ANOP                                                           00109
&AA      SETA  2                                                        00110
.LOOP    ANOP                                                           00111
         AIF   (&AA GT N'&SYSLIST).MEXIT                                00112
&AB      SETA  &AA-1                                                    00113
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG    00114
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG    00115
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER                00116
&AC      SETA  &AC+4096                                                 00117
&AA      SETA  &AA+1                                                    00118
         AGO   .LOOP                                                    00119
.MEXIT   ANOP                                                           00120
         AIF   (&PRORG).MEX2                                            00121
         SPACE                                                          00122
         $REGS                                                          00123
         SPACE                                                          00124
.MEX2    ANOP                                                           00125
&AA      SETA  &LV+72                                                   00126
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'                    00127
         MEXIT                                                          00128
.MEND    ANOP                                                           00129
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'                  00130
         AGO   .MEXIT                                                   00131
.MERR    ANOP                                                           00132
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'                         00133
         AGO   .MEXIT                                                   00134
         MEND                                                           00135
         MACRO                                                          00136
&LABEL   $EPILOG &RC                                                    00137
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS                 00138
         L     R13,4(R13)          GET BACK CHAIN POINTER               00139
         L     R0,16(R13)          GET SAVEAREA LENGTH                  00140
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA                        00141
         AIF   (T'&RC EQ 'O').SPEC                                      00142
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS                 00143
         LA    R15,&RC             SET RETURN CODE                      00144
         AGO   .MEND                                                    00145
.SPEC    ANOP                                                           00146
         L     R14,12(R13)         LOAD RETURN ADDRESS                  00147
         LM    R0,R12,20(R13)      RESTORE CALLERS REGS                 00148
.MEND    ANOP                                                           00149
         BR    R14                 RETURN TO CALLER                     00150
         MEND                                                           00151
         MACRO                                                          00152
&SYM     SYSPRINT &HEADER1=,&HEADER2=,&LINES=78,&DDNAME=SYSPRINT,      X00153
               &LRECL=121                                               00154
         AIF   (K'&SYM EQ 0).NOSYM                                      00155
         AIF   (K'&SYM GT 5).ERRSYM                                     00156
         AIF   (K'&DDNAME GT 8).DDNERR                                  00157
         AIF   ('&LRECL' GT '133').ERRLEN                               00158
         MNOTE *,'DCB = DDNAME=&DDNAME,LRECL=&LRECL,LINES=&LINES'       00159
         AIF   ('&HEADER1' EQ '').HD1                                   00160
         MNOTE *,'    &HEADER1 IS FIRST HEADER LINE'                    00161
         AIF   ('&HEADER2' EQ '').HD2                                   00162
         MNOTE *,'    &HEADER2 IS SECOND HEADER LINE'                   00163
.HD2     MNOTE *,'    THE FIRST BYTE OF ANY BUFFER SPECIFIED WILL'      00164
         MNOTE *,'    BE USED BY THIS ROUTINE FOR ASA CHARACTERS'       00165
         MNOTE *,'    AND UNPREDICTABLE RESULTS MAY OCCUR IF USED.'     00166
         CNOP  0,4                                                      00167
&SYM     NOP   DRC&SYSNDX.C .          NOP BRANCH SET AFTER OPEN        00168
         NOP   DRC&SYSNDX.D .          NOP BRANCH SET AFTER OPEN        00169
         OI    &SYM.+5,C'0' .          SET NOP TO BRANCH                00170
         OI    &SYM.+1,C'0' .          SET FIRST NOP TO BRANCH          00171
         STM   14,2,DRC&SYSNDX.B .     SAVE USERS REGS                  00172
         LA    1,DRC&SYSNDX.A .        LOAD ADDRESS OF OPEN LIST        00173
         SVC   19 .                    ISSUE OPEN SVC                   00174
         AIF   ('&HEADER1' EQ '').HD4                                   00175
DRC&SYSNDX.F MVI &HEADER1,C'1' .       SET CARRIAGE CONTROL             00176
         PUT   &SYM.DCB,&HEADER1                                        00177
         AIF   ('&HEADER2' EQ '').HD5                                   00178
         MVI   &HEADER2,C'-' .         SET TRIPLE SPACE AFTER SKIP      00179
         PUT   &SYM.DCB,&HEADER2                                        00180
         AGO   .HD5                                                     00181
.HD4     L     15,DRC&SYSNDX.B+12 .    GET POINTER TO RECORD            00182
DRC&SYSNDX.E MVI 0(15),C'1' .            SKIP TO ONE FIRST TIME         00183
         LA    2,&LINES.+1 .           GET LINE COUNT                   00184
         AGO   .HD55                                                    00185
.HD5     L     15,DRC&SYSNDX.B+12 .    PICK UP DATA POINTER             00186
         MVI   0(15),C'0' .            SET DOUBLE SPACE AFTER SK97      00187
         LA    2,&LINES.+1 .           PICK UP LINE COUNT               00188
.HD55    ANOP                                                           00189
DRC&SYSNDX.G BCT 2,DRC&SYSNDX.H .      BR TO PRINT FOR NUMBER OF LINES  00190
         AIF   ('&HEADER1' NE '').HD6                                   00191
         B     DRC&SYSNDX.E .          START NEW PAGE                   00192
         AGO   .P4                                                      00193
.HD6     B     DRC&SYSNDX.F .          GO TO DO SKIP AND PRINT HDR      00194
.P4      ANOP                                                           00195
DRC&SYSNDX.H PUT &SYM.DCB,(15)                                          00196
         ST    2,DRC&SYSNDX.J .        SAVE THE LINE COUNT              00197
         LM    14,2,DRC&SYSNDX.B .     RESTORE USERS REGS               00198
         MVI   0(1),C' ' .             PLACE BLANK INTO CARRIAGE CONTR  00199
         MVC   1(&LRECL.-1,1),0(1) .   CLEAR THE BUFFER                 00200
         BR    14 .                    RETURN                           00201
 SPACE                                                                  00202
DRC&SYSNDX.D STM 14,2,DRC&SYSNDX.B .   SAVE REGS ALWAYS                 00203
         AIF   ('&HEADER1' EQ '').P6                                    00204
         B     DRC&SYSNDX.F .          GO TO HEADER ROUTINE             00205
         AGO   .P5                                                      00206
.P6     ANOP                                                            00207
         L     15,DRC&SYSNDX.B+12 .    PICK UP POINTER TO DATA          00208
         B     DRC&SYSNDX.E .          GO TO HEADER RTN                 00209
.P5      ANOP                                                           00210
DRC&SYSNDX.C STM 14,2,DRC&SYSNDX.B .   SAVE REGS ALWAYS                 00211
         L     2,DRC&SYSNDX.J .        RESTORE THE LINE COUNTER         00212
         L     15,DRC&SYSNDX.B+12 .    PICK UP POINTER TO DATA          00213
         MVI   0(15),C' ' .            MOVE X'40' TO ASA                00214
         B     DRC&SYSNDX.G .          GO TEST FOR LINE COUNT           00215
DRC&SYSNDX.M CLC &SYM.DCB+62(2),=H'0' . IS BLOCK SIZE THERE             00216
         BNE   DRC&SYSNDX.L .          IF SO SKIP                       00217
         MVC   &SYM.DCB+62(2),=H'&LRECL'  .     MOVE IN DEFAULT SIZE    00218
DRC&SYSNDX.L BR 14 .               RETURN TO OPEN                       00219
 SPACE                                                                  00220
DRC&SYSNDX.B DC 5F'0' .                PRINT RTNS SAVE AREA             00221
DRC&SYSNDX.J DC F'0' .                 SAVE FOR LINE COUNTER            00222
DRC&SYSNDX.K DC X'85' .                EXIT LIST FOR OPEN               00223
         DC    AL3(DRC&SYSNDX.M) .     POINTER TO THE EXIT ROUTINE      00224
DRC&SYSNDX.A DC AL1(143) .             OPTION BYTE FOR OPEN             00225
         DC    AL3(&SYM.DCB) .         DCB ADCON FOR OPEN               00226
 SPACE                                                                  00227
&SYM.DCB DCB DDNAME=&DDNAME,LRECL=&LRECL,RECFM=FBA,EXLST=DRC&SYSNDX.K, X00228
               DSORG=PS,MACRF=(PM)                                      00229
         MEXIT                                                          00230
.HD1     AIF   ('&HEADER2' EQ '').HD2                                   00231
         MNOTE 8,'8,*** HEADER2 INVALID WITHOUT HEADER1 SPECIFIED'      00232
         MEXIT                                                          00233
.ERRLEN MNOTE 8,'8,*** LRECL TOO LARGE FOR SYSPRINT'                    00234
         MEXIT                                                          00235
.NOSYM  MNOTE 8,'8,*** SYSPRINT MACRO MUST HAVE A LABEL'                00236
         MEXIT                                                          00237
.ERRSYM MNOTE 8,'8,*** LABEL ON SYSPRINT MACRO MUST BE LESS THAN SIX'   00238
         MEXIT                                                          00239
.DDNERR MNOTE 8,'8 *** MAXIMUM DDNAME SIZE IS EIGHT CHARACTERS'         00240
         MEXIT                                                          00241
.BUFERR  MNOTE 8,'8,*** NO BUFFER SUPPLIED, EXECUTION IMPOSSIBLE'       00242
.END     MEND                                                           00243
         PRINT NOGEN                                                    00244
*********************************************************************** 00245
*                                                                       00246
*        THIS PROGRAM REQUIRES SYS1.AMODGEN IN THE COMPILER SYSLIB      00247
*                                                                       00248
*        THIS PROGRAM EXTRACTS SMF TYPE 14 AND 15 RECORDS AND           00249
*        PROVIDES A REPORT SUMMARIZING THEM.  ADDITIONALLY, IF A        00250
*        POST PROCESSOR PROGRAM IS TO BE RUN, THE REFORMATTED DATA      00251
*        IS LEFT IN THE FILE USED AS 'SORTIN'.  THE DATA WILL HAVE      00252
*        BEEN RESTRUCTURED (AS DEFINED BY THE 'SORT RECORD DSECT').     00253
*                                                                       00254
*        IF THE 'MERG' OPTION IS USED, ALL DATASETS WITH LIKE NAMES     00255
*        ARE MERGED INTO A SINGLE ENTRY (INCLUDING GDG DATASETS)        00256
*        AND RECORDS WRITTEN BY THE SAME PROGRAM AT THE SAME            00257
*        TIME WILL HAVE BEEN DECOLATED (IN CASES WHERE A FILE IS        00258
*        OPENED MORE THAN ONCE WITHIN A JOB-STEP THE RESULTANT          00259
*        SMF RECORDS ARE CUMMULATIVE).  THE RECORDS PRODUCED WILL       00260
*        CONTAIN ACTUAL (TOTAL) EXCP COUNTS AS DEFINED BY THE 'OUTREC'  00261
*        DSECT DESCRIPTION.                                             00262
*                                                                       00263
*        IF THE OPTIONAL EXIT-ROUTINE IS USED, THE CONTENTS OF THE      00264
*        'SORTIN' FILE WHICH IS LEFT WILL BE DEPENDENT UPON THE         00265
*        SELECTION DONE BY THAT ROUTINE.  PARMS MAY BE USED FREEFORM    00266
*        (IN ANY ORDER) EXCEPT 'MOD-NAME' MUST BE LAST IF USED.         00267
*                                                                       00268
*        THE FOLLOWING LOCAL CONSTANTS MAY BE CHANGED TO YOUR           00269
*        SPECIFICATIONS IF REQUIRED.  THEY ARE USED TO CALCULATE        00270
*        A NEW BLOCKING FACTOR (AND SUBSEQUENT EXCP SAVINGS).           00271
*                                                                       00272
         LCLA      &TBLK,&DBLK                                          00273
&TBLK    SETA      32767         SUGGESTED BLKSIZE FOR TAPE FILES       00274
&DBLK    SETA      23476         SUGGESTED BLKSIZE FOR DISK FILES 1/2   00275
*                                                                       00276
*                                                                       00277
*********************************************************************** 00278
         EJECT                                                          00279
*********************************************************************** 00280
*                                                                       00281
*        THE FOLLOWING ARE THE AVAILABLE 'PARM' OPTIONS:                00282
*                                                                       00283
*             NOPARM       WILL CAUSE 'ALL' OF THE INPUT TO BE          00284
*                          REFORMATTED TO THE OUTPUT 'SORTIN' DD        00285
*                          CARD ALLOWING THE USER SPECIALIZED           00286
*                          SELECTION VIA A USER PROGRAM.  A REPORT      00287
*                          CONTAINING THE FIRST 2500 ENTRIES WILL       00288
*                          BE LISTED IF THE USER PROVIDES A SORT        00289
*                          CONTROL STATEMENT IN 'SORTCNTL'.             00290
*                                                                       00291
*             PARM='MOD-NAME' WILL CAUSE 'ALL' OF THE INPUT TO BE       00292
*                          REFORMATTED AND PASSED TO THE NAMED MODULE   00293
*                          FOR SELECTION.  UPON RETURN, IF R15 = ZERO,  00294
*                          THE RECORD IS PROCESSED AS BELOW.  IF        00295
*                          NON-ZERO, THE RECORD IS IGNORED (SKIPPED).   00296
*                          UPON ENTRY TO THE EXIT ROUTINE, REGISTER     00297
*                          ONE WILL POINT TO THE COMPOSIT RECORD AND    00298
*                          REGISTER ELEVEN WILL POINT TO THE INPUT SMF  00299
*                          RECORD.  THE FORMAT OF THE COMPOSIT RECORD   00300
*                          IS DESCRIBED BELOW.                          00301
*             PARM='MERG'  WILL CAUSE THE MERGING OF RECORDS THAT       00302
*                          HAVE DUPLICTE DATASET NAMES INCLUDING GDG'S  00303
*                          ('SORTIN' WILL CONTAIN MERGED RECORDS).      00304
*                          THE EXCP COUNT AND EXCP SAVINGS FIELDS       00305
*                          WILL BE ADDED FORMING A CUMULATIVE COUNT     00306
*                          IN EACH RECORD AND DUPLICATE RECORDS WILL    00307
*                          BE SKIPPED.  THE CPU SAVINGS MAY THEN BE     00308
*                          CALCULATED ON THE MERGED RECORD COUNTS.      00309
*                                                                       00310
*             PARM='DISK'  WILL CAUSE SELECTION OF DISK FILE RECORDS    00311
*                          ONLY.                                        00312
*             PARM='TAPE'  WILL CAUSE SELECTION OF TAPE FILE RECORDS    00313
*                          ONLY.                                        00314
*             PARM='TEMP'  WILL CAUSE SELECTION OF TEMPORARY DATASET    00315
*                          RECORDS ONLY.                                00316
*             PARM='PERM'  WILL CAUSE SELECTION OF PERMANENT DATASET    00317
*                          RECORDS ONLY.                                00318
*             PARM='FULL'  WILL CAUSE 'ALL' OF THE INPUT TO BE          00319
*                          LISTED IN THE OPTIONAL REPORT (IF USED).     00320
*                                                                       00321
*        OPTIONALLY, A DD CARD DEFINED AS 'SORTCNTL' MAY BE USED TO     00322
*        PROVIDE THE 'SYSIN' INPUT FOR SORT AND A REPORT CONTAINING     00323
*        THE FIRST 2500 RECORDS WILL BE PRODUCED (UNLESS THE 'FULL'     00324
*        PARM IS USED).                                                 00325
*                                                                       00326
*        IF THE 'SORTCNTL' DD CARD IS NOT PROVIDED, THEN THE 'SORTIN'   00327
*        FILE WILL CONTAIN THE REFORMATTED RECORDS FOR SUBSEQUENT       00328
*        PROCESSING BY A POST PROCESSOR OR USER MODULE AND NO REPORT    00329
*        WILL BE GENERATED.                                             00330
*                                                                       00331
*********************************************************************** 00332
         EJECT                                                          00333
*********************************************************************** 00334
*                                                                       00335
*        THE FOLLOWING JCL MAY BE USED TO EXECUTE THIS ROUTINE          00336
*        AFTER INSURING THAT IT FITS YOUR INSTALLATION.                 00337
*                                                                       00338
* //SMF1415 JOB CLASS=A,NOTIFY=TSO001,MSGCLASS=A                        00339
* //SMF1415  EXEC PGM=SMF1415,PERFORM=1                                 00340
* //SYSUT1 DD DISP=SHR,DSN=SMF.HIST.DATA        <=== INPUT SMF FILE     00341
* //SYSPRINT DD SYSOUT=*                        <=== OUTPUT REPORT      00342
* //*                                                                   00343
* //SYSOUT   DD SYSOUT=*                        <=== SORT LISTING       00344
* //SORTIN   DD UNIT=VIO,SPACE=(CYL,(45))       <=== WORK FILE FOR RPT  00345
* //*                                  OR OUTPUT FILE FOR POST-PROCESS  00346
* //SORTOUT  DD UNIT=VIO,SPACE=(CYL,(45))       <=== WORK FILE          00347
* //SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00348
* //SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00349
* //SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00350
* //SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00351
* //SORTWK05 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00352
* //SORTWK06 DD UNIT=SYSDA,SPACE=(CYL,(10))     <=== WORK FILE          00353
* //SYSIN    DD UNIT=VIO,SPACE=(CYL,(45))       <=== WORK FILE          00354
* //SORTCNTL DD *    <=== TO PROVIDE REPORT LISTING SORTED AS BELOW     00355
*  SORT FIELDS=(92,8,CH,D)                      <=== EXCP SAVINGS       00356
*                                                                       00357
*********************************************************************** 00358
         EJECT                                                          00359
SMF1415  $PROLOG R11,R12                                                00360
*---------------------------------------------------------------------- 00361
*                                                                       00362
*                     INITIALIZATION                                    00363
*                                                                       00364
*---------------------------------------------------------------------- 00365
ENTRY010 DS    0H                                                       00366
         OI    OPTFLG,TAPE+DISK+TEMP+PERM SET DEFAULTS                  00367
         L     R1,0(R1)         GET PARM POINTER                        00368
         LH    R2,0(R1)         GET PARM SIZE                           00369
         LTR   R2,R2            ANY PARM GIVEN?                         00370
         BZ    HHH010           NO, TAKE DEFAULT                        00371
AAA010   CLC   2(4,R1),=C'FULL' REQUEST FOR 'ALL' OPTION?               00372
         BNE   BBB010           NO, CHECK NEXT OPTION                   00373
         OI    OPTFLG,ALL       SET OPTFLG                              00374
         B     GGG010           CONTINUE                                00375
BBB010   CLC   2(4,R1),=C'TAPE' ONLY TAPE DATASETS REQUESTED?           00376
         BNE   CCC010           NO, CHECK NEXT OPTION                   00377
         NI    OPTFLG,X'FF'-DISK RESET OPTFLG                           00378
         B     GGG010           CONTINUE                                00379
CCC010   CLC   2(4,R1),=C'DISK' ONLY DISK DATASETS REQUESTED?           00380
         BNE   DDD010           NO, CHECK NEXT PARM                     00381
         NI    OPTFLG,X'FF'-TAPE RESET OPTFLG                           00382
         B     GGG010           CONTINUE                                00383
DDD010   CLC   2(4,R1),=C'TEMP' ONLY TEMP DATASETS REQUESTED?           00384
         BNE   EEE010           NO, CHECK NEXT OPTION                   00385
         NI    OPTFLG,X'FF'-PERM RESET OPTFLG                           00386
         B     GGG010           CONTINUE                                00387
EEE010   CLC   2(4,R1),=C'PERM' ONLY PERM DATASETS REQUESTED?           00388
         BNE   MMM010           NO, CHECK NEXT                          00389
         NI    OPTFLG,X'FF'-TEMP RESET OPTFLG                           00390
         B     GGG010           CONTINUE                                00391
MMM010   CLC   2(4,R1),=C'MERG' MERGE DUPLICATE NAMES?                  00392
         BNE   FFF010           NO, CHECK IF MODULE NAME                00393
         OI    OPTFLG,MERGE     YES, SET OPTFLG                         00394
         B     GGG010           CONTINUE                                00395
FFF010   BCTR  R2,0             DECREMENT PARM SIZE (MODULE NAME)       00396
         EX    R2,EXITMOVE      MOVE MODULE NAME                        00397
         BLDL  0,BLDLLIST       DOES MODULE NAME EXIST?                 00398
         LTR   R15,R15          CHECK RETCODE                           00399
         BNZ   ERROR010         NO, INVALID PARM                        00400
         LOAD  EPLOC=EXITNAME   YES, LOAD SAME                          00401
         ST    R0,EXITRTN       SAVE ADDRESS OF MODULE                  00402
         B     HHH010           BEGIN (MODULE NAME MUST BE LAST PARM)   00403
GGG010   LA    R1,5(R1)         BUMP TO NEXT POSSIBLE PARM              00404
         SH    R2,=H'5'         DECREMENT FOR PROCESSED PARM            00405
         BP    AAA010           BRANCH IF MORE PARMS                    00406
         B     HHH010           CONTINUE                                00407
EXITMOVE MVC   EXITNAME(0),2(R1) MOVE MODULE NAME                       00408
ERROR010 WTO   'SMFPOST - INVALID PARM SPECIFIED',                     X00409
               ROUTCDE=11       INFORM USER                             00410
         OI    RETCODE+3,16     SET RETURN CODE                         00411
         B     RETURN           RETURN TO THE SYSTEM                    00412
HHH010   TM    OPTFLG,DISK+TAPE+ALL WAS ANYTHING SELECTED?              00413
         BNZ   EXIT010          YES, PARMS DONE                         00414
         TM    OPTFLG,TEMP+PERM WAS ANYTHING SELECTED?                  00415
         BNZ   EXIT010          YES, LETS GO                            00416
         WTO   'SMFPOST - INVALID PARM (TEMP AND PERM OR DISK AND TAPE X00417
               ARE MUTUALLY EXCLUSIVE',ROUTCDE=11                       00418
         B     RETURN            ALL DONE                               00419
EXIT010  OPEN  (SYSUT1,,SORTIN,(OUTPUT),SYSIN,(OUTPUT)) OPEN FILES      00420
         EJECT                                                          00421
*---------------------------------------------------------------------- 00422
*                                                                       00423
*              GET A RECORD AND DETERMINE IF IT SHOULD BE PROCESSED     00424
*                                                                       00425
*---------------------------------------------------------------------- 00426
ENTRY020 DS    0H                                                       00427
         USING SMFTYP14,R10                                             00428
         GET   SYSUT1             GET AN SMF RECORD                     00429
         LR    R10,R1             ADDR OF RECORD                        00430
         MVI   OT$SMFTY,C'I'      SET DEFAULT TYPE                      00431
         CLI   SMF14RTY,X'0E'     TYPE 14 RECORD ?                      00432
         BE    AAA020             YES - CONTINUE                        00433
         CLI   SMF14RTY,X'0F'     TYPE 15 RECORD ?                      00434
         BNE   ENTRY020           NO - GET NEXT RECORD                  00435
         MVI   OT$SMFTY,C'O'      SET RECORD TYPE                       00436
AAA020   CLI   SMFUCBTY+2,X'20'   IS THIS DISK?                         00437
         BNE   BBB020             NO CHECK FOR TAPE                     00438
         TM    OPTFLG,DISK        YES, WAS DISK REQUESTED?              00439
         BO    CCC020             YES, PROCESS DISK                     00440
         B     ENTRY020           NO GET NEXT RECORD                    00441
BBB020   CLI   SMFUCBTY+2,X'80'   IS THIS TAPE?                         00442
         BNE   ENTRY020           NO, IGNORE NON-DISK/NON-TAPE          00443
         TM    OPTFLG,TAPE        YES, WAS DISK REQUESTED?              00444
         BNO   ENTRY020           NO GET NEXT RECORD                    00445
CCC020   TM    SMF14RIN,SMF14TDS  IS THIS A TEMPORARY DATA SET ?        00446
         BNO   DDD020             NO, CHECK PERM                        00447
         TM    OPTFLG,TEMP        WERE TEMPORARIES REQUESTED?           00448
         BNO   ENTRY020           NO, IGNORE IT                         00449
         B     EXIT020            YES, PROCESS IT                       00450
DDD020   TM    OPTFLG,PERM        WERE PERMANENTS REQUESTED?            00451
         BNO   ENTRY020           NO, IGNORE IT                         00452
EXIT020  EQU   *                                                        00453
         MVC   OT$RSD,SMF14RSD    READER DATE                           00454
         MVC   OT$RST,SMF14RST    READER TIME                           00455
         MVC   OT$DATE,SMF14DTE   RECORD DATE                           00456
         MVC   OT$TIME,SMF14TME   RECORD TIME                           00457
         EJECT                                                          00458
*---------------------------------------------------------------------- 00459
*                                                                       00460
*        JOBNAME, DDNAME, DS TYPE                                       00461
*                                                                       00462
*---------------------------------------------------------------------- 00463
         MVC   OT$JOBNM,SMF14JBN  MOVE JOBNAME                          00464
         MVC   OT$DDNAM,SMFTIOE5  AND DD NAME FOR THIS DSN              00465
         MVC   OT$DSNAM,JFCBDSNM  DATA SET NAME                         00466
         MVI   OT$TEMP,C' '       CLEAR FIELD                           00467
         TM    SMF14RIN,SMF14TDS  IS THIS A TEMPORARY DATA SET ?        00468
         BZ    AAA030             NO -                                  00469
         MVI   OT$TEMP,C'T'       YES - SET INDICATOR                   00470
AAA030   EQU   *                                                        00471
         TM    SMF14RIN,SMF14VIO  IS THIS A VIO DATA SET ?              00472
         BZ    EXIT030            NO -                                  00473
         MVI   OT$TEMP,C'V'       YES - SET INDICATOR                   00474
EXIT030  EQU   *                                                        00475
         SPACE 3                                                        00476
*---------------------------------------------------------------------- 00477
*                                                                       00478
*        DISP OF DATA SET                                               00479
*                                                                       00480
*---------------------------------------------------------------------- 00481
         TM    JFCBIND2,JFCNEW    DISP=NEW ?                            00482
         BNO   AAA040             NO -                                  00483
         MVI   OT$DISP,C'N'       YES - MOVE IN 'NEW'                   00484
         B     EXIT040                                                  00485
AAA040   EQU   *                                                        00486
         TM    JFCBIND2,JFCMOD    DISP=MOD ?                            00487
         BNO   BBB040             NO -                                  00488
         MVI   OT$DISP,C'M'       YES - MOVE IN 'MOD'                   00489
         B     EXIT040                                                  00490
BBB040   EQU   *                                                        00491
         TM    JFCBIND2,JFCOLD    DISP=OLD ?                            00492
         BNO   CCC040             NO -                                  00493
         MVI   OT$DISP,C'O'       YES - MOVE IN 'OLD'                   00494
CCC040   EQU   *                                                        00495
         TM    JFCBIND2,JFCSHARE  DISP=SHR ?                            00496
         BNO   EXIT040            NO -                                  00497
         MVI   OT$DISP,C'S'       YES - MOVE IN 'SHR'                   00498
EXIT040  EQU   *                                                        00499
         EJECT                                                          00500
*---------------------------------------------------------------------- 00501
*                                                                       00502
*                             DSORG                                     00503
*                                                                       00504
*---------------------------------------------------------------------- 00505
         TM    JFCDSRG1,JFCORGIS  ISAM ?                                00506
         BZ    AAA050             NO -                                  00507
         MVC   OT$DSORG,=C'IS'    YES -                                 00508
         B     EXIT050                                                  00509
AAA050   EQU   *                                                        00510
         TM    JFCDSRG1,JFCORGPS  SEQUENTIAL ?                          00511
         BZ    BBB050             NO -                                  00512
         MVC   OT$DSORG,=C'PS'    YES -                                 00513
         B     EXIT050                                                  00514
BBB050   EQU   *                                                        00515
         TM    JFCDSRG1,JFCORGDA  BDAM ?                                00516
         BZ    CCC050             NO -                                  00517
         MVC   OT$DSORG,=C'DA'    YES -                                 00518
         B     EXIT050                                                  00519
CCC050   EQU   *                                                        00520
         TM    JFCDSRG1,JFCORGCX  BTAM ?                                00521
         BZ    DDD050             NO -                                  00522
         MVC   OT$DSORG,=C'BT'    YES -                                 00523
         B     EXIT050                                                  00524
DDD050   EQU   *                                                        00525
         TM    JFCDSRG1,JFCORGPO  PDS  ?                                00526
         BZ    EEE050             NO -                                  00527
         MVC   OT$DSORG,=C'PO'    YES -                                 00528
         B     EXIT050                                                  00529
EEE050   EQU   *                                                        00530
         TM    JFCDSRG2,JFCORGTX  TCAM ?                                00531
         BZ    FFF050             NO -                                  00532
         MVC   OT$DSORG,=C'TC'    YES -                                 00533
         B     EXIT050                                                  00534
FFF050   EQU   *                                                        00535
         TM    JFCDSRG2,JFCORGAM  VSAM ?                                00536
         BZ    EXIT050            NO -                                  00537
         MVC   OT$DSORG,=C'VS'    YES -                                 00538
EXIT050  EQU   *                                                        00539
         EJECT                                                          00540
*---------------------------------------------------------------------- 00541
*                                                                       00542
*                  SPACE ALLOCATION                                     00543
*                                                                       00544
*---------------------------------------------------------------------- 00545
         XR    R1,R1              CLEAR R1                              00546
         ICM   R1,7,JFCBPQTY      PRIMARY ALLOCATION                    00547
         CVD   R1,DBLWRD          CHANGE TO PACK DECIMAL                00548
         MVC   WORK8,EDIT7        MOVE EDIT PATTERN  9999999            00549
         ED    WORK8,DBLWRD+4     UNPK                                  00550
         MVC   OT$PQTY,WORK8+1    CHANGE SIGN                           00551
*                                                                       00552
         XR    R1,R1              CLEAR R1                              00553
         ICM   R1,7,JFCBSQTY      SECONDARY ALLOCATION                  00554
         CVD   R1,DBLWRD          CHANGE TO PACK DECIMAL                00555
         MVC   WORK8,EDIT7        MOVE EDIT PATTERN  9999999            00556
         ED    WORK8,DBLWRD+4     UNPK                                  00557
         MVC   OT$SQTY,WORK8+1    CHANGE SIGN                           00558
*                                                                       00559
         CLI   JFCBCTRI,JFCBABS   ABSOLUTE TRACK ADDRESS ?              00560
         BNE   AAA070             NO -                                  00561
         MVI   OT$ALOC,C'A'       YES -                                 00562
         B     EXIT070                                                  00563
AAA070   EQU   *                                                        00564
         TM    JFCBCTRI,JFCBAVR   AVERAGE BLOCK ?                       00565
         BZ    BBB070             NO -                                  00566
         MVI   OT$ALOC,C'B'       YES -                                 00567
         B     EXIT070                                                  00568
BBB070   EQU   *                                                        00569
         TM    JFCBCTRI,JFCBTRK   TRACK ALLOCATION ?                    00570
         BZ    CCC070             NO -                                  00571
         MVI   OT$ALOC,C'T'       YES -                                 00572
         B     EXIT070                                                  00573
CCC070   EQU   *                                                        00574
         TM    JFCBCTRI,JFCBCYL   CYLINDER ALLOCATION ?                 00575
         BZ    EXIT070            NO -                                  00576
         MVI   OT$ALOC,C'C'       YES -                                 00577
         B     EXIT070                                                  00578
EXIT070  EQU   *                                                        00579
         EJECT                                                          00580
*---------------------------------------------------------------------- 00581
*                                                                       00582
*                  CHANNEL/UNIT ADDRESS                                 00583
*                                                                       00584
*---------------------------------------------------------------------- 00585
         LA    R1,SMFUCBCH        CHAN/UNIT ADDR                        00586
         ST    R1,HXDATA          STORE IN PARM LIST                    00587
         MVC   HXLNGTH,=F'2'      LENGTH OF DATA TO BE TRANSLATED       00588
         MVC   HXOUT,=A(DBLWRD)   ADDR OF AREA FOR XLATED DATA          00589
         LA    R1,HXPARMS         PARMS FOR HEXLATE PROGRAM             00590
         L     R15,HXPGM          EPA OF TRANSLATE ROUTINE              00591
         BALR  R14,R15                                                  00592
         LTR   R15,R15            ANY ERRORS ?                          00593
         BNZ   ERROR1             YES - TO ERROR ROUTINE                00594
         MVC   OT$CUA,DBLWRD+1    MOVE TO OUTPUT RECORD                 00595
         SPACE 2                                                        00596
*---------------------------------------------------------------------- 00597
*                                                                       00598
*                  RECORD FORMAT                                        00599
*                                                                       00600
*---------------------------------------------------------------------- 00601
         MVC   OT$RECFM,=CL3' '   CLEAR RECFM FIELD                     00602
         TM    JFCRECFM,JFCUND    UNDEFINED?                            00603
         BNO   AAA080             NO                                    00604
         MVI   OT$RECFM,C'U'      INDICATE RECFM                        00605
         B     EXIT080            ALLDONE                               00606
AAA080   TM    JFCRECFM,JFCFIX    FIXED?                                00607
         BZ    BBB080             NO                                    00608
         MVI   OT$RECFM,C'F'      INDICATE RECFM                        00609
         TM    JFCRECFM,JFCRFB    BLOCKED?                              00610
         BZ    CCC080             NO                                    00611
         MVI   OT$RECFM+1,C'B'    INDICATE BLOCKED                      00612
         TM    JFCRECFM,JFCRFS    SPANNED?                              00613
         BZ    EXIT080            ALLDONE                               00614
         MVI   OT$RECFM+2,C'S'    INDICATE SPANNED                      00615
         B     EXIT080            ALLDONE                               00616
BBB080   TM    JFCRECFM,JFCVAR    VARIABLE                              00617
         BZ    EXIT080            ALLDONE                               00618
         MVI   OT$RECFM,C'V'      INDICATE RECFM                        00619
         TM    JFCRECFM,JFCRFB    BLOCKED?                              00620
         BZ    CCC080             NO                                    00621
         MVI   OT$RECFM+1,C'B'    INDICATE BLOCKED                      00622
         TM    JFCRECFM,JFCRFS    SPANNED?                              00623
         BZ    EXIT080            ALLDONE                               00624
         MVI   OT$RECFM+2,C'S'    INDICATE SPANNED                      00625
         B     EXIT080            ALLDONE                               00626
CCC080   TM    JFCRECFM,JFCRFS    SPANNED?                              00627
         BZ    EXIT080            ALLDONE                               00628
         MVI   OT$RECFM+1,C'S'    INDICATE SPANNED                      00629
EXIT080  EQU   *                                                        00630
         EJECT                                                          00631
*---------------------------------------------------------------------- 00632
*                                                                       00633
*                  VOL SER  AND UNIT TYPE                               00634
*                                                                       00635
*---------------------------------------------------------------------- 00636
         MVC   OT$VOLSR,SMFSRTEV  VOLUME SERIAL NUMBER                  00637
         LA    R7,UNITTBL         UNIT TYPE TABLE                       00638
         LA    R8,8               TABLE ELEMENT LENGTH                  00639
         LA    R9,UNTBLEND-8      END OF TABLE ADDRESS - 8              00640
LOOP090  EQU   *                                                        00641
         CLC   0(2,R7),SMFUCBTY+2 FIND UCBTYPE IN TABLE                 00642
         BE    AAA090             FOUND                                 00643
         BXLE  R7,R8,LOOP090      LOOP THRU TABLE                       00644
AAA090   EQU   *                                                        00645
         MVC   OT$DEVC,2(R7)      MOVE DEVICE DESCRIPTION TO OUT REC    00646
         B     EXIT090                                                  00647
UNITTBL  DS    0F                                                       00648
         DC    X'2006',C'2305-1'                                        00649
         DC    X'2007',C'2305-2'                                        00650
         DC    X'2008',C'2314  '                                        00651
         DC    X'2009',C'3330  '                                        00652
         DC    X'200A',C'3340  '                                        00653
         DC    X'200B',C'3350  '                                        00654
         DC    X'200D',C'3330-1'                                        00655
         DC    X'200E',C'3380  '                                        00656
         DC    X'8001',C'2400  '                                        00657
         DC    X'8003',C'3400  '                                        00658
UNTBLEND DC    X'0000',C'XXXXXX'                                        00659
EXIT090  EQU   *                                                        00660
*---------------------------------------------------------------------- 00661
*                                                                       00662
*                  MACRO INSTRUCTION REFERENCE (MACRF)                  00663
*                                                                       00664
*---------------------------------------------------------------------- 00665
         MVI   OT$MACRF,C' '      CLEAR OUTPUT RECORD FIELD             00666
         TM    SMFDCBMF,X'80'     IS THIS EXCP ACCESS?                  00667
         BZ    AAA095             NO, CONTINUE                          00668
         MVI   OT$MACRF,C'E'      INDICATE MACRF                        00669
         B     EXIT095            ALL DONE                              00670
AAA095   TM    SMFDCBMF,X'40'     IS THIS GET ACCESS?                   00671
         BZ    BBB095             NO, CONTINUE                          00672
         MVI   OT$MACRF,C'G'      INDICATE MACRF                        00673
         B     EXIT095            ALL DONE                              00674
BBB095   TM    SMFDCBMF+1,X'40'   IS THIS PUT ACCESS?                   00675
         BZ    CCC095             NO, CONTINUE                          00676
         MVI   OT$MACRF,C'P'      INDICATE MACRF                        00677
         B     EXIT095            ALL DONE                              00678
CCC095   TM    SMFDCBMF,X'20'     IS THIS READ ACCESS?                  00679
         BZ    DDD095             NO, CONTINUE                          00680
         MVI   OT$MACRF,C'R'      INDICATE MACRF                        00681
         B     EXIT095            ALL DONE                              00682
DDD095   TM    SMFDCBMF+1,X'20'   IS THIS WRITE ACCESS?                 00683
         BZ    EXIT095            NO, DON'T KNOW THEN                   00684
         MVI   OT$MACRF,C'W'      INDICATE MACRF                        00685
EXIT095  EQU   *                                                        00686
         EJECT                                                          00687
*---------------------------------------------------------------------- 00688
*                                                                       00689
*                  EXCP COUNTS, LRECL, BLKSIZE                          00690
*                                                                       00691
*---------------------------------------------------------------------- 00692
         MVC   OT$EXCP(4),SMFEXCP MOVE EXCP COUNT TO OUTPUT RECORD      00693
         MVC   OT$LRECL(2),JFCLRECL MOVE LRECL TO OUTPUT RECORD         00694
         MVC   OT$BLKSI(2),JFCBLKSI MOVE BLKSIZE TO OUTPUT RECORD       00695
         SPACE 2                                                        00696
*---------------------------------------------------------------------- 00697
*                                                                       00698
*                 INVOKE THE USERS EXIT ROUTINE IF REQUESTED            00699
*                                                                       00700
*---------------------------------------------------------------------- 00701
         ICM   R15,15,EXITRTN     SHOULD WE LINK TO EXIT ROUTINE?       00702
         BZ    AAA100             NO, CONTINUE WITH DEFAULT             00703
         LA    R1,OUTREC          POINT TO SORTED RECORD FOR EXITRTN    00704
         BALR  R14,R15            YES, GIVE EXIT ROUTINE CONTROL        00705
         LTR   R15,R15            PROCESS THIS RECORD?                  00706
         BNZ   ENTRY020           NO, SKIP IT (R15 = NON-ZERO)          00707
AAA100   PUT   SORTIN,OUTREC      WRITE RECORD FOR SORTING              00708
         OI    SWITCH,DATASW      INDICATE DATA TO SORT                 00709
         MVI   OUTREC,X'00'       CLEAR OUTREC                          00710
         MVC   OUTREC+1(129),OUTREC FOR NEXT BUILD                      00711
         B     ENTRY020           GET NEXT RECORD                       00712
         SPACE 2                                                        00713
*---------------------------------------------------------------------- 00714
*                                                                       00715
*            END OF DATA GENERATION, CALL SORT                          00716
*                                                                       00717
*---------------------------------------------------------------------- 00718
ENDGEN   PUT   SYSIN,SORTCARD     WRITE SORT CONTROL CARD               00719
         CLOSE (SYSUT1,,SORTIN,,SYSIN) CLOSE FILES                      00720
         TM    SWITCH,DATASW      ARE THERE ANY RECORDS TO SORT?        00721
         BO    AAA110             YES, CONTINUE                         00722
         WTO   'SMF1415 - NO 14/15 RECORDS FOUND IN INPUT',ROUTCDE=11   00723
         OC    RETCODE,=F'12'     SET RETURN CODE                       00724
         B     RETURN             EXIT                                  00725
         CNOP  0,4                FULLWORD ALIGN                        00726
AAA110   EQU   *                                                        00727
         WTO   'SMF1415 - SORT1                          ',ROUTCDE=11   00723
         LA    R1,PARLST        SET NULL PARM POINTER                   00906
BBB110   LINK  EP=SORT            CALL SORT                             00729
         LTR   R15,R15            VALID SORT?                           00730
         BZ    EXIT110            YES, CONTINUE                         00731
         ST    R15,RETCODE        SAVE SORT RETURN CODE                 00732
         WTO   'SMF1415 - NON-ZERO SORT RETURN CODE, TEMINATE',        X00733
               ROUTCDE=11                                               00734
         B     RETURN                                                   00735
EXIT110  EQU   *                                                        00736
         EJECT                                                          00737
*---------------------------------------------------------------------- 00738
*                                                                       00739
*            END OF SORT, BUILD COMPOSITE RECORDS BY DATASET            00740
*                                                                       00741
*---------------------------------------------------------------------- 00742
         OPEN  (SORTOUT,(INPUT),SORTIN,(OUTPUT)) OPEN FILES             00743
         GET   SORTOUT,OUTREC     GET A RECORD                          00744
ENTRY120 GET   SORTOUT,OUTREC2    GET A SECOND RECORD                   00745
         TM    SWITCH,DECO        WAS LAST RECORD DECOLATED?            00746
         BZ    AA0120             NO, CONTINUE                          00747
         CLC   OUTREC(83),OUTREC2 IS THIS THE SAME DSN/JOB/ETC?         00748
         BE    AA1120             YES, CONTINUE DECOLATING              00749
         NI    SWITCH,X'FF'-DECO  RESET DECOLATE SWITCH                 00750
         MVC   OUTREC(141),OUTREC2 IGNORE LAST JOB RECORD               00751
         B     ENTRY120           GET NEXT RECORD                       00752
AA0120   CLC   OUTREC(83),OUTREC2 IS THIS THE SAME DSN/JOB/ETC?         00753
         BNE   AAA120             NO, NO CHECK FOR MERGE                00754
AA1120   ICM   R1,15,OT$EXCP      PICK UP LARGEST EXCP COUNT            00755
         ICM   R2,15,OUTREC2+OT$EXCP-OUTREC PICK UP SMALLER COUNT       00756
         SR    R1,R2              DECREMENT TO FORM ACTUAL COUNT        00757
         BM    AAA120             IF INVALID COUNT, IGNORE ADJUSTMENT   00758
         STCM  R1,15,OT$EXCP      UPDATE WITH REAL EXCP COUNT           00759
         OI    SWITCH,DECO        SET DECOLATION SWITCH                 00760
         B     EXIT120            PROCESS DECOLATED RECORD              00761
AAA120   TM    OPTFLG,MERGE       IS MERGE REQUESTED?                   00762
         BZ    EXIT120            NO, CONTINUE                          00763
         CLC   OUTREC(44),BLANKS  IS THIS A BLANK DDNAME (CONCAT)?      00764
         BE    EXIT120            YES, NO MERGE                         00765
         CLC   OUTREC(44),OUTREC2 IS THIS THE SAME DSNAME?              00766
         BE    FFF120             YES, MERGE COUNTS                     00767
         LA    R15,35             SET LOOP CONTROL                      00768
         LA    R1,OUTREC+43       POINT TO END OF DSNAME                00769
BBB120   CLI   0(R1),C' '         CHECK FOR NON-BLANK                   00770
         BNE   CCC120             FOUND, CONTINE                        00771
         BCTR  R1,0               DECREMENT                             00772
         BCT   R15,BBB120         BACK FOR NEXT CHARACTER               00773
         B     EXIT120            NOT A GDG, CONTINUE                   00774
CCC120   S     R1,=F'8'           DECREMENT TO PERIOD OF GDG NAME       00775
         CLC   0(2,R1),=C'.G'     IS THIS A GDG?                        00776
         BNE   EXIT120            NO, PROCESS IT                        00777
         CLC   6(3,R1),=C'V00'    IS THIS A GDG?                        00778
         BNE   EXIT120            NO, PROCESS IT                        00779
         LA    R14,35             SET LOOP CONTROL                      00780
         LA    R2,OUTREC2+43      POINT TO END OF DSNAME                00781
DDD120   CLI   0(R2),C' '         CHECK FOR NON-BLANK                   00782
         BNE   EEE120             FOUND, CONTINE                        00783
         BCTR  R2,0               DECREMENT                             00784
         BCT   R14,DDD120         BACK FOR NEXT CHARACTER               00785
         B     EXIT120            NOT A GDG, CONTINUE                   00786
EEE120   S     R2,=F'8'           DECREMENT TO PERIOD OF GDG NAME       00787
         CLC   0(2,R2),=C'.G'     IS THIS A GDG?                        00788
         BNE   EXIT120            NO, PROCESS IT                        00789
         CLC   6(3,R2),=C'V00'    IS THIS A GDG?                        00790
         BNE   EXIT120            NO, PROCESS IT                        00791
         CR    R14,R15            SAME SIZE DSN?                        00792
         BNE   EXIT120            NO, PROCESS IT                        00793
         LA    R15,OUTREC         POINT TO OUTREC                       00794
         SR    R1,R15             GET SIZE OF QUALIFIER                 00795
         EX    R1,GDGCOMP         COMPARE DSNAME QUALIFIERS             00796
         BNE   EXIT120            DIFFERENT GDG'S PROCESS IT            00797
FFF120   ICM   R1,15,OT$EXCP      PICK UP EXCP COUNT FROM 1ST RECORD    00798
         ICM   R15,15,OUTREC2+OT$EXCP-OUTREC AND SECOND RECORD          00799
         AR    R1,R15             ADD THEM                              00800
         STCM  R1,15,OT$EXCP      INTO CURRENT RECORD                   00801
         ICM   R1,15,OT$SAVE      PICK UP SAVE COUNT FROM 1ST RECORD    00802
         ICM   R15,15,OUTREC2+OT$SAVE-OUTREC AND SECOND RECORD          00803
         AR    R1,R15             ADD THEM                              00804
         STCM  R1,15,OT$SAVE      INTO CURRENT RECORD                   00805
         B     ENTRY120           GET NEXT RECORD                       00806
GDGCOMP  CLC   OUTREC(0),OUTREC2  COMPARE GDG DSNAME QUALIFIERS         00807
EXIT120  EQU   *                                                        00808
         EJECT                                                          00809
*---------------------------------------------------------------------- 00810
*                                                                       00811
*                 POTENTIAL EXCP COUNT SAVINGS                          00812
*                                                                       00813
*---------------------------------------------------------------------- 00814
         PRINT GEN                                                      00815
         ZAP   OT$SAVE,=P'0'      ASSUME NO SAVINGS                     00816
         L     R1,=F'&TBLK'       ASSUME TAPE BLKSIZE                   00817
         CLC   OT$DEVC(2),=C'24'  IS IT TAPE?                           00818
         BE    AAA200             YES, BLKSIZE SET                      00819
         CLC   OT$DEVC(2),=C'34'  IS IT TAPE?                           00820
         BE    AAA200             YES, BLKSIZE SET                      00821
         L     R1,=F'&DBLK'       ASSUME DISK DATASET                   00822
AAA200   CLM   R1,3,OT$BLKSI      CAN WE HELP?                          00823
         BNH   EXIT200            NO, IGNORE SAVINGS                    00824
         XR    R2,R2              CLEAR FOR ICM                         00825
         CLM   R2,3,OT$BLKSI      ZERO BLKSIZE?                         00826
         BE    EXIT200            YES, CANNOT COMPUTE                   00827
         ICM   R2,3,OT$LRECL      GET LRECL                             00828
         BNZ   BBB200             IF VALID CONTINUE                     00829
         ICM   R2,3,OT$BLKSI      NOT VALID, USE BLKSIZE                00830
BBB200   XR    R0,R0              CLEAR FOR DIVIDE                      00831
         DR    R0,R2              BY LRECL TO GET NEW BLK FACTOR        00832
         XR    R0,R0              CLEAR REMAINDER FOR MULTIPLY          00833
         MR    R0,R2              BY LRECL TO GET NEW BLKSIZE           00834
         CLM   R1,3,OT$BLKSI      CAN WE HELP?                          00835
         BNH   EXIT200            NO, IGNORE SAVINGS                    00836
*        R1 NOW CONTAINS THE NEW SUGESTED BLOCK SIZE                    00837
         XR    R3,R3              CLEAR FOR ICM                         00838
         ICM   R3,3,OT$BLKSI      GET BLKSIZE REALLY USED               00839
         ICM   R4,15,OT$EXCP      GET EXCP COUNT                        00840
         BZ    EXIT200            ZERO EXCP COUNT, IGNORE SAVINGS       00841
         XR    R2,R2              CLEAR FOR MULTIPLY                    00842
         MR    R2,R4              GET NUMBER OF BYTES TRANSFERED        00843
*        LTR   R1,R1     CHECK TO SEE IF ZERO  AXC-CBT                  00844
*        BNZ   OKAYZ     NO ZERO A OKAY        AXC-CBT                  00845
*        LA    R1,1      LETS MAKE IT A ONE    AXC-CBT                  00846
OKAYZ    DR    R2,R1              DIVIDE BY NEW BLKSIZE TO GET EXCPS    00847
         LTR   R3,R3              IS RESULT ZERO?                       00848
         BNZ   CCC200             NO, BLKSIZE LESS THAN $ OF BYTES      00849
         LA    R3,1               WHOLE FILE CAN BE DONE WITH ONE EXCP  00850
*        R3 NOW CONTAINS THE NEW EXCP COUNT POSSIBLE                    00851
CCC200   ICM   R2,15,OT$EXCP      GET ACTUAL EXCP COUNT                 00852
         SR    R2,R3              SUBTRACT NEW FROM ACTUAL              00853
*        R2 NOW CONTAINS THE EXCP COUNT SAVINGS (DIFFERENCE)            00854
         CVD   R2,DBLWRD          CONVERT SAVE TO PACKED DECIMAL        00855
         ZAP   OT$SAVE,DBLWRD     MOVE TO OUTPUT RECORD                 00856
EXIT200  EQU   *                                                        00857
         EJECT                                                          00858
*---------------------------------------------------------------------- 00859
*                                                                       00860
*                 CONVERT EXCP COUNTS, LRECL, AND BLKSIZE               00861
*                                                                       00862
*---------------------------------------------------------------------- 00863
         PRINT NOGEN                                                    00864
         ICM   R1,15,OT$EXCP      EXCP COUNT (BINARY)                   00865
         CVD   R1,DBLWRD          CONVERT EXCP TO PACKED DECIMAL        00866
         ZAP   OT$EXCP,DBLWRD     MOVE TO OUT RECORD                    00867
*                                                                       00868
         XR    R1,R1              CLEAR R1                              00869
         ICM   R1,3,OT$LRECL      LOGICAL RECORD LENGTH                 00870
         CVD   R1,DBLWRD          CHANGE TO PACKED DECIMAL              00871
         MVC   WORK6,EDIT5        EDIT PATTERN 99999                    00872
         ED    WORK6,DBLWRD+5     UNPK                                  00873
         MVC   OT$LRECL,WORK6+1   MOVE TO OUTPUT RECORD                 00874
*                                                                       00875
         XR    R1,R1              CLEAR R1                              00876
         ICM   R1,3,OT$BLKSI      BLOCK SIZE                            00877
         CVD   R1,DBLWRD          CHANGE TO PACKED DECIMAL              00878
         MVC   WORK6,EDIT5        EDIT PATTERN 99999                    00879
         ED    WORK6,DBLWRD+5     UNPK                                  00880
         MVC   OT$BLKSI,WORK6+1   MOVE TO OUTPUT RECORD                 00881
         SPACE 3                                                        00882
         PUT   SORTIN,OUTREC      PUT OUT RECORD                        00883
         MVC   OUTREC(141),OUTREC2 MOVE BUFFERED RECORD                 00884
         B     ENTRY120           GET NEXT RECORD                       00885
         EJECT                                                          00886
*---------------------------------------------------------------------- 00887
*                                                                       00888
*        END OF DATA ON SORTOUT, PROVIDE SORTED REPORT IF REQUESTED     00889
*                                                                       00890
*---------------------------------------------------------------------- 00891
ENDBLD   TM    SWITCH,EOF1        IS THIS FIRST END OF FILE             00892
         BO    EOJ                NO, ALL DONE                          00893
         OI    SWITCH,EOF1        SET FIRST END OF FILE                 00894
         CLOSE (SORTOUT,,SORTIN)  CLOSE FILES                           00895
         OPEN  (SORTCNTL,(INPUT)) OPEN SORT CONTROL CARD FILE           00896
         TM    SORTCNTL+48,X'10'  WAS OPEN OK?                          00897
         BZ    RETURN             NO, ALL DONE                          00898
         OPEN  (SYSIN,(OUTPUT))   OPEN SORT SYSIN FILE                  00899
NEXTCNTL GET   SORTCNTL,SORTCARD  GET USER'S SORT CARD                  00900
         PUT   SYSIN,SORTCARD     PROVIDE SAME FOR SORT                 00901
         B     NEXTCNTL           GET NEXT CARD IF ANY                  00902
ENDCNTL  CLOSE (SYSIN,,SORTCNTL)  CLOSE FILES                           00903
         B     BYPASS             BYPASS ALIGNMENT                      00904
         DS    0F                 FULLWORD ALIGN                        00905
BYPASS   EQU *                                                          00906
         WTO   'SMF1415 - SORT2                          ',ROUTCDE=11   00723
         LA    R1,PARLST          SET NULL PARM POINTER                 00906
BBB220   EQU *                                                          00908
         LINK  EP=SORT            CALL SORT                             00908
         LTR   R15,R15            VALID SORT?                           00909
         BZ    EXIT220            YES, CONTINUE                         00910
         ST    R15,RETCODE        SAVE SORT RETURN CODE                 00911
         WTO   'SMF1415 - NON-ZERO SORT RETURN CODE, TEMINATE',        X00912
               ROUTCDE=11                                               00913
         B     RETURN                                                   00914
EXIT220  EQU   *                                                        00915
         EJECT                                                          00916
*---------------------------------------------------------------------- 00917
*                                                                       00918
*            END OF SORT, GENERATE OUTPUT REPORT                        00919
*                                                                       00920
*---------------------------------------------------------------------- 00921
         OPEN  (SORTOUT,(INPUT))  OPEN JUST SORTED FILE                 00922
AAA230   GET   SORTOUT,OUTREC     GET A RECORD                          00923
         CLC   OT$BLKSI,=CL5'    0' ZERO BLOCK SIZE (EXCP)?             00924
         BE    AAA230             YES, IGNORE                           00925
         CLC   OT$SAVE,=X'000000000000500C'  CBT-AXC                    00926
         BL    AAA230                        CBT-AXC                    00927
         CLC   OT$SAVE,=X'000000000000000C'  CBT-AXC                    00928
         BE    AAA230                        CBT-AXC                    00929
         MVC   RP$DSNAM,OT$DSNAM  MOVE DATASET NAME                     00930
         CLI   RP$DSNAM,X'04'
         BNE   SKPVTOC
         MVC   RP$DSNAM,RP#VTOC
SKPVTOC  MVC   RP$DDNAM,OT$DDNAM  MOVE DD NAME                          00931
         MVC   RP$JOBNM,OT$JOBNM  MOVE JOB NAME                         00932
         MVC   RP$TEMP,OT$TEMP    MOVE INDICATOR 1                      00933
         MVC   RP$DISP,OT$DISP    MOVE DISPOSITION                      00934
         MVC   RP$MACRF,OT$MACRF  MOVE MACRF                            00935
         MVC   RP$DSORG,OT$DSORG  MOVE DSORG                            00936
         MVC   RP$RECFM,OT$RECFM  MOVE RECORD FORMAT                    00937
         MVC   RP$BLKSI,OT$BLKSI  MOVE BLKSIZE                          00938
         MVC   RP$LRECL,OT$LRECL  MOVE LRECL                            00939
         MVC   RP$VOLSR,OT$VOLSR  MOVE VOLUME SER                       00940
         MVC   RP$UCB,OT$CUA       MOVE UCB                             00940
         MVC   RP$DEVC,OT$DEVC    MOVE DEVICE TYPE                      00941
         MVC   RP$SMFTY,OT$SMFTY  MOVE RECORD TYPE                      00942
         MVC   WORK10,EDIT9       MOVE EDIT MASK                        00943
         ED    WORK10,OT$EXCP+3   UNPK ACTUAL EXCP'S                    00944
         MVC   RP$EXCP,WORK10+1   MOVE TO OUTPUT RECORD                 00945
         MVC   WORK10,EDIT9       MOVE EDIT MASK                        00946
         ED    WORK10,OT$SAVE+3   UNPK POSSIBLE SAVED EXCP'S            00947
         MVC   RP$SAVE,WORK10+1   MOVE TO OUTPUT RECORD                 00948
         LA    R1,RPTREC          POINT TO DETAIL RECORD                00949
         BAL   R14,RPT            WRITE RECORD OUT                      00950
         AP    TOTEXCPS,OT$EXCP   ADD TO TOTAL EXCPS                    00951
         AP    TOTSAVES,OT$SAVE   ADD TO TOTAL SAVINGS                  00952
         L     R2,LCNT            GET LINE COUNT                        00953
         LA    R2,1(R2)           BUMP LINE COUNT                       00954
         CH    R2,=H'50'          AT THE LIMIT      76                  00955
         BNE   NOSUM              NO, CONTINUE                          00956
         LA    R1,BLANKS          POINT TO BLANK LINE                   00957
         BAL   R14,RPT            PRINT IT                              00958
         MVC   WORK10,EDIT9       MOVE EDIT MASK                        00959
         ED    WORK10,TOTEXCPS+3  MAKE PRINTABLE                        00960
         MVC   SUMEXCPS,WORK10+1  MOVE TO OUTPUT RECORD                 00961
         MVC   WORK10,EDIT9       MOVE EDIT MASK                        00962
         ED    WORK10,TOTSAVES+3  MAKE PRINTABLE                        00963
         MVC   SUMSAVES,WORK10+1  MOVE TO OUTPUT RECORD                 00964
         LA    R1,SUMMARY         POINT TO SUMMARY RECORD               00965
         SR    R2,R2              CLEAR LINE COUNT                      00966
         BAL   R14,RPT            WRITE SUMMARY RECORD                  00967
         TM    OPTFLG,ALL         ALL REQUESTED?                        00968
         BO    NOSUM              NO, IGNORE COUNTING PAGES             00969
         L     R15,COUNT          GET PAGE COUNT                        00970
         C     R15,=F'50'         ARE WE AT OUR LIMIT?                  00971
         BH    EOJ                YES, END OF REPORT                    00972
         LA    R15,1(R15)         NO, BUMP COUNT                        00973
         ST    R15,COUNT          SAVE COUNT                            00974
NOSUM    ST    R2,LCNT            SAVE UPDATED LINE COUNT               00975
         B     AAA230             GET NEXT RECORD                       00976
         EJECT                                                          00977
*---------------------------------------------------------------------- 00978
*                                                                       00979
*            EOJ AND CLEANUP                                            00980
*                                                                       00981
*---------------------------------------------------------------------- 00982
EOJ      DS    0H                                                       00983
         CLOSE (SORTOUT,,RPTDCB)                                        00984
RETURN   EQU   *                                                        00985
         L     R15,RETCODE        LOAD RETURN CODE                      00986
         $EPILOG ,                RETURN                                00987
         SPACE 5                                                        00988
*---------------------------------------------------------------------- 00989
*                                                                       00990
*            ERROR ROUTINES                                             00991
*                                                                       00992
*---------------------------------------------------------------------- 00993
ERROR1   DS    0H                 INVALID START DATE                    00994
         OC    RETCODE,=F'4'      SET RETURN CODE OF 4                  00995
         WTO   'SMF1415 - BAD RETURN CODE FROM HEXLATE',ROUTCDE=11      00996
         ABEND 1,DUMP                                                   00997
EXITIN   CLC   SORTIN+62(2),=H'0' ANY BLKSIZE SPECIFIED?                00998
         BNER  R14                YES, RETURN                           00999
         MVC   SORTIN+62(2),=H'6063' NO, BLOCK BY 43                    01000
         BR    R14                RETURN                                01001
         EJECT                                                          01002
*---------------------------------------------------------------------- 01003
*                                                                       01004
*            PROGRAM CONSTANTS                                          01005
*                                                                       01006
*---------------------------------------------------------------------- 01007
*---------------------------------------------------------------------- 01250
*  SORT PARMLIST   ---------------------------------------------------- 01250
         DS    0F                                                       01528**7
PARLST   DC    X'80',AL3(SORTPRM1)                                      01528**7
         DC    H'0'                                                     01529**7
SORTPRM1 DC    AL2(PARMEND1-PARMBEG1)                                   01530**7
PARMBEG1 EQU   *                                                        01531**7
         DC    A(SORT1,SORTEND1,REC1,RECEND1,0,0)                       01532**7
SORTSIZ1 DC    F'100000'                                                01533**7
SORTMSG1 DC    X'FF00'                                                  01534**7
         DC    C'AP'                                                    01535**7
PARMEND1 EQU   *                                                        01536**7
*                                                                     * 01537**7
SORT1    DS    0H                                                       01538**7
*                                                                       01539**7
       DC    C' SORT FIELDS=(1,91,CH,D),SIZE=E40000 '                   01540**7
SORTEND1 EQU   *-1                                                      01542**7
*                                                                     * 01543**7
REC1     DS    0H                                                       01544**7
         DC    C' RECORD LENGTH=141,TYPE=F '                        NTL 01545**7
RECEND1  EQU   *-1                                                      01546**7
*                                                                     * 01547**7
********                                                                01008
HEAD     DS   0CL133                                                    01009
CC       DC   C' '                                                      01010
         DC   CL40'-JAN 86--------------- DSNAME ----------',C' ' DSN   01011
         DC   CL8'DDNAME',C' '                                          01012
         DC   CL8'JOBNAME',C' '                                         01013
         DC   CL6'DEVTYP',C' '          DEVICE TYPE                     01014
         DC   CL6'VOLSER',C' '          VOL SERIAL NUMBER               01015
         DC   CL3'UCB',C' '             UCB ADDRESS                     01016
         DC   CL2'IO',C' '              SMF RECORD TYPE I OR O          01016
         DC   CL2'PT',C' '              TYPE OF DATASET                 01017
         DC   CL3'DSP',C' '             DISPOSITION OF DATA SET         01018
         DC   CL3'DSO',C' '             DATA SET ORGANIZATION           01019
         DC   CL3'MAC',C' '             MACRF                           01020
         DC   CL3'FMT',C' '             RECFM                           01021
         DC   CL5'LRECL',C' '           LRECL                           01022
         DC   CL5'BLOCK',C' '           BLKSIZE                         01023
         DC   CL9'ACT-EXCPS',C' '       ACTUAL EXCP COUNTS              01024
         DC   CL9'POSS-SAVE',C' '       POSSIBLE EXCP SAVINGS           01025
         DC   CL06' '               10                                  01026
********                                                                01027
RPTREC   DS   0CL133                                                    01028
         DC   C' '                  ASA CHAR                            01029
RP$DSNAM DC   CL40' ',C' '          DATA SET NAME                       01030
RP$DDNAM DC   CL8' ',C' '           DDNAME                              01031
RP$JOBNM DC   CL8' ',C' '           JOB NAME                            01032
RP$DEVC  DC   CL6' ',C' '           DEVICE TYPE                         01033
RP$VOLSR DC   CL6' ',C' '           VOLUME SERIAL NUMBER                01034
RP$UCB   DC   CL3' ',C' '           UCB ADDRESS                         01034
RP$SMFTY DC   CL1' ',CL2' '         SMF RECORD TYPE I OR O              01035
RP$TEMP  DC   CL1' ',CL3' '         DATASET TYPE                        01036
RP$DISP  DC   CL1' ',CL2' '         DISPOSITION OF DATA SET             01037
RP$DSORG DC   CL2' ',CL3' '         DATA SET ORGANIZATION               01038
RP$MACRF DC   CL1' ',CL2' '         MACRF                               01039
RP$RECFM DC   CL3' ',C' '           RECFM                               01040
RP$LRECL DC   CL5' ',C' '           LRECL                               01041
RP$BLKSI DC   CL5' ',C' '           BLKSIZE                             01042
RP$EXCP  DC   CL9' ',C' '           EXCP COUNT                          01043
RP$SAVE  DC   CL9' ',C' '           SAVE COUNT                          01044
         DC   CL06' '                10                                 01045
********                                                                01046
SWITCH   DC    X'00'                                                    01047
DATASW   EQU   X'01'         DATA FOUND INDICATOR                       01048
EOF1     EQU   X'02'         FIRST END OF FILE SW                       01049
DECO     EQU   X'04'         DECOLATION SWITCH                          01050
********                                                                01051
OPTFLG   DC    X'00'                                                    01052
ALL      EQU   X'01'         ALL DATA REQUESTED                         01053
DISK     EQU   X'02'         ONLY DISK REQUESTED                        01054
TAPE     EQU   X'04'         ONLY TAPE REQUESTED                        01055
TEMP     EQU   X'08'         ONLY TEMP DATASETS                         01056
PERM     EQU   X'10'         ONLY PERM DATASETS                         01057
MERGE    EQU   X'20'         MERGE DUPLICATE DATASETS                   01058
********                                                                01059
RP#VTOC  DC    CL44'VTOC'                                               01060
DBLWRD   DC    D'0'                                                     01060
TOTEXCPS DC    PL8'0'                                                   01061
TOTSAVES DC    PL8'0'                                                   01062
WORK8    DC    CL8' '                                                   01063
WORK6    DC    CL6' '                                                   01064
WORK10   DC    CL10' '                                                  01065
EDIT7    DC    X'4020202020202120'                                      01066
EDIT5    DC    X'402020202120'                                          01067
EDIT9    DC    X'40202020202020202120'                                  01068
HXPGM    DC    V(HEXLATE)                                               01069
LSTIN    DC    X'85',AL3(EXITIN)                                        01070
EXITRTN  DC    F'0'                                                     01071
RETCODE  DC    F'0'                                                     01072
COUNT    DC    F'0'                                                     01073
LCNT     DC    F'0'                                                     01074
BLDLLIST DC    H'1',H'12'      NUMBER AND SIZE OF ENTRIES               01075
EXITNAME DC    CL8' '          NAME OF MODULE                           01076
TTRC     DC    CL12' '         TTRC AREA                                01077
TIME     DS    0CL8                                                     01078
HRS      DC    CL2' '                                                   01079
MIN      DC    CL2' '                                                   01080
SEC      DC    CL2' '                                                   01081
TH       DC    CL2' '                                                   01082
SMFTIME  DC    F'0'                                                     01083
HXPARMS  DS    0F                                                       01084
HXLNGTH  DC    F'0'                                                     01085
HXDATA   DC    A(0)                                                     01086
HXOUT    DC    A(0)                                                     01087
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=ENDGEN,BFTEK=A     01088
SORTIN   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=PM,LRECL=141,EXLST=LSTIN,  X01089
               RECFM=FB                                                 01090
SORTOUT  DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=GM,EODAD=ENDBLD,RECFM=FB, X01091
               LRECL=141                                                01092
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,       X01093
               BLKSIZE=80                                               01094
SORTCNTL DCB   DDNAME=SORTCNTL,DSORG=PS,MACRF=GM,RECFM=FB,LRECL=80,    X01095
               BLKSIZE=80,EODAD=ENDCNTL                                 01096
RPT      SYSPRINT DDNAME=SYSPRINT,HEADER1=HEAD,LRECL=133                01097
BLANKS   DC    CL133' '                                                 01098
SUMMARY  DS    0CL133                                                   01099
         DC    CL103' '                                                 01100
SUMEXCPS DC    CL9' ',C' '                                              01101
SUMSAVES DC    CL9' ',C' '                                              01102
         DC    CL9' ',CL10' '                                           01103
SORTCARD DC    CL80' SORT FIELDS=(1,91,CH,D) <=== INTERIM SORT'         01104
OUTREC2  DC    CL141' '                                                 01105
         LTORG                                                          01106
         EJECT                                                          01107
*---------------------------------------------------------------------- 01108
*                                                                       01109
*            SORT RECORD DSECT                                          01110
*                                                                       01111
*---------------------------------------------------------------------- 01112
OUTREC   EQU  *                                                         01113
OT$DSNAM DC   CL44' '        DATA SET NAME                              01114
OT$VOLSR DC   CL6' '         VOLUME SERIAL NUMBER                       01115
OT$DEVC  DC   CL6' '         DEVICE TYPE                                01116
OT$CUA   DC   CL3' '         CHANNEL/UNIT ADDRESS                       01117
OT$DDNAM DC   CL8' '         DDNAME                                     01118
OT$JOBNM DC   CL8' '         JOB NAME                                   01119
OT$RSD   DC   PL4'0'         DATE READER RECOGNIZED JOB CARD (PACKED    01120
*                            AND JULIAN 00YYDDD+)                       01121
OT$RST   DC   XL4'00'        TIME READER RECOGNIZED JOB CARD (IN BINARY 01122
*                            AND IN HUNDREDTHS OF A SECOND)             01123
OT$EXCP  DC   PL8'0'         EXCP COUNT                                 01124
OT$SAVE  DC   PL8'0'         POTENTIAL SAVINGS IN EXCP COUNTS           01125
OT$SMFTY DC   CL1' '         SMF RECORD TYPE (I=INPUT,O=OUTPUT)         01126
OT$TEMP  DC   CL1' '         DATASET TYPE (T=TEMP,V=VIO)                01127
OT$DISP  DC   CL1' '         DISPOSITION OF DATA SET (N=NEW,M=MOD,      01128
*                            O=OLD,S=SHR)                               01129
OT$MACRF DC   CL1' '         MACRF (E=EXCP,G=GET,P=PUT,R=READ,W=WRITE)  01130
OT$RECFM DC   CL3' '         RECORD FORMAT (U=UNDEFINED,F=FIXED,        01131
*                            B=BLOCKED,S=SPANNED,V=VARIABLE)            01132
OT$DSORG DC   CL2' '         DATA SET ORGANIZATION (IS=ISAM,            01133
*                            PS=PHYSICAL SEQUENTIAL,DA=BDAM,            01134
*                            BT=BTAM,PO=PARTITIONED,TC=TCAM,            01135
*                            VS=VSAM)                                   01136
OT$BLKSI DC   CL5' '         BLKSIZE                                    01137
OT$LRECL DC   CL5' '         LRECL                                      01138
OT$PQTY  DC   CL7' '         PRIMARY ALLOCATION QUANTITY                01139
OT$SQTY  DC   CL7' '         SECONDARY ALLOCATION QUANTITY              01140
OT$ALOC  DC   CL1' '         ALLOCATION UNIT (T=TRACK,C=CYLINDER,       01141
*                            A=ABSOLUTE TRACK,B=AVERAGE BLOCK)          01142
OT$DATE  DC   PL4'0'         DATE RECORD TO SMF BUFFER (PACKED AND      01143
*                            JULIAN 00YYDDD+)                           01144
OT$TIME  DC   XL4'00'        TIME RECORD TO SMF BUFFER (IN BINARY       01145
*                            AND IN HUNDREDTHS OF A SECOND)             01146
OT$RECSZ EQU  *-OUTREC       SIZE OF SORT RECORD                        01147
         EJECT                                                          01148
*---------------------------------------------------------------------- 01149
*                                                                       01150
*        HEX TO CHARACTER TRANSLATION SUBROUTINE                        01151
*                                                                       01152
*        R1 ===>  DS   F     LENGTH OF DATA TO BE TRANSLATED            01153
*                 DS   F     DATA TO BE TRANSLATED                      01154
*                 DS   F     AREA FOR TRANSLATED OUTPUT                 01155
*                                                                       01156
*---------------------------------------------------------------------- 01157
HEXLATE  $PROLOG LV=20                                                  01158
HXENT010 DS    0H                                                       01159
         LR    R11,R1          SAVE PARM ADDR                           01160
         USING PARMS,R11       DSECT FOR PARMS                          01161
         L     R2,LNGTH        DATA LENGTH                              01162
         LR    R0,R2           PUT IN R0                                01163
         GETMAIN R,LV=(0)      GET A WORKAREA                           01164
         ST    R1,72(R13)      SAVE ADDR OF FIRST WORKAREA              01165
         LR    R0,R2           PUT IN R0                                01166
         GETMAIN R,LV=(0)      GET A WORKAREA                           01167
         ST    R1,76(R13)      SAVE ADDR OF SECOND WORKAREA             01168
         L     R0,72(R13)      1ST WORKAREA ADDR                        01169
         L     R14,INPUT       INPUT DATA                               01170
         L     R1,LNGTH        DATA LENGTH                              01171
         L     R15,LNGTH                                                01172
         MVCL  R0,R14          MOVE DATA TO WORKAREA                    01173
         L     R0,76(R13)      2ND WORKAREA ADDR                        01174
         L     R14,INPUT       INPUT DATA                               01175
         L     R1,LNGTH        DATA LNGTH                               01176
         L     R15,LNGTH                                                01177
         MVCL  R0,R14          MOVE DATA TO WORKAREA                    01178
HXEX010  EQU   *                                                        01179
         EJECT                                                          01180
*---------------------------------------------------------------------- 01181
*                                                                       01182
*        TRANSLATE DATA TO PRINTABLE HEX                                01183
*                                                                       01184
*---------------------------------------------------------------------- 01185
         L     R3,LNGTH        DATA LENGTH                              01186
         L     R7,72(R13)      1ST WORKAREA                             01187
         L     R8,76(R13)      2ND WORKAREA                             01188
HXLP020  EQU   *                                                        01189
         C     R3,=F'256'      DATA LENGTH GREATER THAN 256 ?           01190
         BL    HXB020          NO - 1 TRANSLATE WILL DO IT              01191
         LA    R9,TABLE1       YES - TRANSLATE 256 AT A TIME            01192
         XR    R6,R6           CLEAR R6                                 01193
         IC    R6,=X'FF'       SET LENGTH CODE FOR EX TO 255            01194
         EX    R6,XLATE1       TRANSLATE 1ST HALF OF EACH BYTE          01195
         LA    R9,TABLE2                                                01196
         EX    R6,XLATE2       TRANSLATE 2ND HALF OF EACH BYTE          01197
         LA    R7,256(R7)      BUMP WORKAREA1                           01198
         LA    R8,256(R8)      BUMP WORKAREA2                           01199
         S     R3,=F'256'      DECR REMAINING DATA LENGTH               01200
         B     HXLP020         CONTINUE TRANSLATING ALL DATA            01201
HXB020   EQU   *                                                        01202
         CH    R3,=H'0'        ANY DATA LEFT ??                         01203
         BE    HXEX020         NO - TRANSLATE DONE                      01204
HXC020   EQU   *                                                        01205
         SH    R3,=H'1'        YES - DECR FOR EX INSTRUCTION            01206
         LA    R9,TABLE1       TRANSLATE                                01207
         EX    R3,XLATE1       *        REMAINING                       01208
         LA    R9,TABLE2       *               DATA                     01209
         EX    R3,XLATE2                                                01210
HXEX020  EQU   *                                                        01211
         B     HXENT030                                                 01212
*---------------------------------------------------------------------- 01213
XLATE1   TR    0(0,R7),0(R9)                                            01214
XLATE2   TR    0(0,R8),0(R9)                                            01215
*---------------------------------------------------------------------- 01216
         EJECT                                                          01217
*---------------------------------------------------------------------- 01218
*                                                                       01219
*        PUT DATA BACK TOGETHER IN ONE LINE                             01220
*                                                                       01221
*---------------------------------------------------------------------- 01222
HXENT030 EQU   *                                                        01223
         L     R3,LNGTH        DATA LENGTH                              01224
         L     R7,72(R13)      ODD BYTES (FROM 1ST HALF OF EACH BYTE)   01225
         L     R8,76(R13)      EVEN BYTES (FROM 2ND HALF OF EACH BYTE)  01226
         L     R9,OUTPUT       OUTPUT AREA                              01227
HXLP030  EQU   *                                                        01228
         MVC   0(1,R9),0(R7)   MOVE 1ST HALF                            01229
         MVC   1(1,R9),0(R8)   MOVE 2ND HALF                            01230
         LA    R7,1(R7)        BUMP TO NEXT BYTE                        01231
         LA    R8,1(R8)        BUMP TO NEXT BYTE                        01232
         LA    R9,2(R9)        BUMP                                     01233
         BCT   R3,HXLP030      MOVE FOR LENGTH OF DATA                  01234
HXEX030  EQU   *                                                        01235
         EJECT                                                          01236
*---------------------------------------------------------------------- 01237
*                                                                       01238
*        CLEANUP AND RETURN                                             01239
*                                                                       01240
*---------------------------------------------------------------------- 01241
         L     R0,LNGTH        LENGTH OF WORKAREA                       01242
         L     R1,72(R13)      ADDR OF WORKAREA 1                       01243
         FREEMAIN R,LV=(0),A=(1)                                        01244
         L     R0,LNGTH        LENGTH OF WORKAREA                       01245
         L     R1,76(R13)      ADDR OF WORKAREA 2                       01246
         FREEMAIN R,LV=(0),A=(1)                                        01247
         $EPILOG 0                                                      01248
         EJECT                                                          01249
TABLE1   DS    0CL256                                                   01251
         DC    16C'0'                                                   01252
         DC    16C'1'                                                   01253
         DC    16C'2'                                                   01254
         DC    16C'3'                                                   01255
         DC    16C'4'                                                   01256
         DC    16C'5'                                                   01257
         DC    16C'6'                                                   01258
         DC    16C'7'                                                   01259
         DC    16C'8'                                                   01260
         DC    16C'9'                                                   01261
         DC    16C'A'                                                   01262
         DC    16C'B'                                                   01263
         DC    16C'C'                                                   01264
         DC    16C'D'                                                   01265
         DC    16C'E'                                                   01266
         DC    16C'F'                                                   01267
*---------------------------------------------------------------------- 01268
TABLE2   DS    0CL256                                                   01269
         DC    16C'0123456789ABCDEF'                                    01270
*---------------------------------------------------------------------- 01271
         LTORG                                                          01272
PARMS    DSECT                                                          01273
LNGTH    DS    F                                                        01274
INPUT    DS    F                                                        01275
OUTPUT   DS    F                                                        01276
         PRINT NOGEN                                                    01277
SMFTYP14 DSECT                                                          01278
         IFASMFR 14                                                     01279
         ORG   SMFJFCB1                                                 01280
         IEFJFCBN  LIST=YES                                             01281
         ORG                                                            01282
         END                                                            01283
